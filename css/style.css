/* 
&display=swap
&subset=cyrillic-ext 
*/

/* ОБНУЛЕНИЕ СТИЛЕЙ */
*,
*::before,
*::after {
	margin: 0;
	padding: 0;
	border: 0;
	box-sizing: border-box;
}
li {
	list-style: none;
}
a,
a:visited {
	text-decoration: none;
}
a:hover {
	text-decoration: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight: inherit;
	font-size: inherit;
}
img {
	vertical-align: top;
}
html,
body {
	height: 100%;
}
html {
	font-size: 16px; /* по умолчанию */
}
body {
	line-height: 1;
	/* color: #000; */
	/* font-family:""; */
	overflow-x: hidden;
	font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
	background-color: #333;
}
.wrapper {
	min-height: 100%;
	padding: 30px;
}
/* ------------------------------ */

/*
CSS – переходы либо CSS – transitions могут применяться ко всем элементам и даже к псевдоэлементам. Используются для оживления нашей верстки. Что в свою очередь приводит к улучшению взаимодействия с пользователем, как правило путем приятной анимированной реакции на его действия. Например – наведение и нажатие на кнопку. Также свойства transition можно использовать для построения несложных сценариев анимации. Фактически, CSS – переходы обеспечивают смену значений других свойств с определенной анимацей и сценарием. Всю эту магию можно описать универсальным CSS свойcтвом transition, либо рядом следующих отдельных свойств: 
*/

/*
	Определяет промежуток времени, в течение которого должен осуществляться переход. Собственно – тут мы указываем время за которое одно значение свойства по переходит (анимируется) в другое. Свойство не наследуется.
	*/
/* transition-duration: 0.2s; */
/*
	Содержит название CSS-свойств, к которым будет применен эффект перехода. Значение свойства может содержать как одно свойство, так и список свойств через запятую. Свойство не наследуется.	
	*/
/* transition-property: all; */
/*
	Задержка выполнения перехода. Позволяет сделать так, чтобы изменение свойства происходило не моментально, а с некоторой задержкой. Время задержки перехода указывается в секундах или миллисекундах. Свойство не наследуется.
	*/
/* transition-delay: 0s; */
/*
	Задаёт стиль нашего перехода, то есть некий сценарий, по которому будет осуществятся анимация.
	*/
/*
	Переход начинается медленно, разгоняется быстро и замедляется в конце. 
	*/
/* transition-timing-function: ease; */

/* Универсальное свойство */
/* transition: 0.3s; */
/* 
	Порядок значений:
	property duration timing-function delay 
	*/

.beer {
	display: inline-block;
	padding: 50px;
	background-color: #c98686;
	width: 1000px;
	height: 1000px;
}

.beer__item {
	display: inline-block;
	width: 49%;
	height: 70%;
	animation-name: beer-anim;
	animation-duration: 3s;
	animation-iteration-count: infinite;
	animation-direction: alternate;
}

.beer__item1 {
	display: inline-block;
	width: 49%;
	height: 70%;
	animation-name: beer-anim1;
	animation-duration: 3s;
	animation-iteration-count: infinite;
	animation-direction: alternate;
}

@keyframes beer-anim {
	0% {
		transform: rotate(0);
	}

	50% {
		transform: rotate(15deg);
	}

	100% {
		transform: translateX(125px);
	}
}

@keyframes beer-anim1 {
	0% {
		transform: rotate(0);
	}
	50% {
		transform: rotate(-15deg);
	}
	100% {
		transform: translateX(-122px);
	}
}

.beer__neck {
	margin: 0 auto;
	background-color: #008000c1;
	width: 21.5%;
	height: 40%;
	border-radius: 20%;
	transform: translateY(15%);
	/* overflow: hidden; */
}
.beer__circle {
	/* overflow: hidden; */
	position: relative;
	z-index: 200;
	margin: 0 auto;
	background-color: #008000e4;
	border-radius: 30%;
	width: 45%;
	height: 60%;
}

.beer__circle::before {
	content: "";
	position: absolute;
	width: 85%;
	height: 85%;
	left: 7%;
	bottom: 7%;
	background-color: rgba(241, 139, 23, 0.888);
	border-radius: 30%;
	animation-name: beer-knock;
	animation-duration: 3s;
	animation-iteration-count: infinite;
}

.beer__circle1 {
	/* overflow: hidden; */
	position: relative;
	z-index: 200;
	margin: 0 auto;
	background-color: #008000e4;
	border-radius: 30%;
	width: 45%;
	height: 60%;
}

.beer__circle1::before {
	content: "";
	position: absolute;
	width: 85%;
	height: 85%;
	left: 7%;
	bottom: 7%;
	background-color: rgba(241, 139, 23, 0.888);
	border-radius: 30%;
	animation-name: beer-knock1;
	animation-duration: 3s;
	animation-iteration-count: infinite;
}

@keyframes beer-knock {
	0% {
	}

	50% {
		transform: rotate(5deg);
	}

	100% {
		transform: rotate(0deg);
	}
}

@keyframes beer-knock1 {
	0% {
	}

	50% {
		transform: rotate(-5deg);
	}

	100% {
		transform: rotate(0deg);
	}
}

.beer__name {
	position: absolute;
	top: 25%;
	background-color: #54280b;
	border-radius: 8%;
	font-size: 35px;
	text-align: center;
	padding: 50px 0px;
	color: rgb(248, 248, 248);
}

.beer__button {
	margin-top: 50px;
	display: inline-block;
	background-color: #be7545;
	border-radius: 10px;
	padding: 50px 80px;
	color: #e2cfcf;
	text-align: center;
	max-width: 300px;
	font-size: 30px;
	animation-name: button-anim;
}

.beer__button:hover {
	animation-play-state: running;
	animation-duration: 0.5s;
	animation-iteration-count: infinite;
}

@keyframes button-anim {
	0% {
		background-color: aqua;
		color: red;
	}
	50% {
		background-color: red;
		color: #c98686;
	}
	100% {
		background-color: #be7545;
		color: rgb(2, 75, 75);
	}
}
